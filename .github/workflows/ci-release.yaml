jobs:
  create-release:
    env:
      BRANCH_NAME: ${{ needs.prepare-release.outputs.release-branch }}
      VERSION: ${{ needs.prepare-release.outputs.version }}
    needs:
    - prepare-release
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Repository
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Set Version
      run: mvn versions:set -DnewVersion=${VERSION}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_RELEASE_TOKEN }}
      name: Commit Version
      run: "MESSAGE=\"prepare-release: set version to ${VERSION}\"\nCONTENT=$(base64\
        \ -i pom.xml)\n\nif [[ -z `git ls-remote --quiet --heads origin \"${BRANCH_NAME}\"\
        ` ]]; then\n  SHA=$(git rev-parse ${GITHUB_REF#refs/heads/}:pom.xml)\n\n \
        \ # https://gist.github.com/swinton/03e84635b45c78353b1f71e41007fc7c\n  gh\
        \ api --method PUT /repos/{owner}/{repo}/contents/pom.xml \\\n    --field\
        \ message=\"${MESSAGE}\" \\\n    --field content=\"${CONTENT}\" \\\n    --field\
        \ encoding=\"base64\" \\\n    --field branch=\"${GITHUB_REF_NAME}\" \\\n \
        \   --field sha=\"${SHA}\"\n\n  git fetch\n  git reset --hard \"origin/${GITHUB_REF_NAME}\"\
        \n  git checkout -b \"${BRANCH_NAME}\"\n  git push origin \"${BRANCH_NAME}\"\
        \nelse\n  git checkout \"${BRANCH_NAME}\"\n  SHA=$(git rev-parse ${BRANCH_NAME}:pom.xml)\n\
        \n  gh api --method PUT /repos/{owner}/{repo}/contents/pom.xml \\\n    --field\
        \ message=\"${MESSAGE}\" \\\n    --field content=\"${CONTENT}\" \\\n    --field\
        \ encoding=\"base64\" \\\n    --field branch=\"${BRANCH_NAME}\" \\\n    --field\
        \ sha=\"${SHA}\"\nfi"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_RELEASE_TOKEN }}
      name: Create GitHub Release
      run: "gh release create \"${{ needs.prepare-release.outputs.version }}\" \\\n\
        \  --target \"${{ needs.prepare-release.outputs.release-branch }}\" \\\n \
        \ --title \"${{ needs.prepare-release.outputs.version }}\" \\\n  --generate-notes"
  post-release:
    env:
      BRANCH_NAME: ${{ needs.prepare-release.outputs.release-branch }}
      NEXT_VERSION: ${{ needs.prepare-release.outputs.next-version }}
    needs:
    - prepare-release
    - create-release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Repository
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
      with:
        ref: ${{ needs.prepare-release.outputs.release-branch }}
    - continue-on-error: true
      name: Set SNAPSHOT Version after Release
      run: mvn versions:set -DnewVersion=${NEXT_VERSION}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_RELEASE_TOKEN }}
      name: Commit SNAPSHOT Version
      run: "MESSAGE=\"prepare-iteration: set version to ${NEXT_VERSION}\"\nCONTENT=$(base64\
        \ -i pom.xml)\nSHA=$(git rev-parse ${BRANCH_NAME}:pom.xml)\n\ngh api --method\
        \ PUT /repos/{owner}/{repo}/contents/pom.xml \\\n  --field message=\"${MESSAGE}\"\
        \ \\\n  --field content=\"${CONTENT}\" \\\n  --field encoding=\"base64\" \\\
        \n  --field branch=\"${BRANCH_NAME}\" \\\n  --field sha=\"${SHA}\""
  prepare-release:
    outputs:
      next-version: ${{ steps.variables.outputs.next-version }}
      release-branch: ${{ steps.variables.outputs.release-branch }}
      version: ${{ steps.variables.outputs.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Repository
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
    - continue-on-error: true
      id: variables
      name: Setup Environment
      run: "VERSION=\"${{ github.event.inputs.version-overwrite }}\"\nif [[ -z ${VERSION}\
        \ ]]; then\n  CURRENT_SNAPSHOT=`yq -p=xml '.project.version' pom.xml`\n  VERSION=${CURRENT_SNAPSHOT%-SNAPSHOT}\n\
        fi\nNEXT_VERSION=\"${VERSION%.*}.$((${VERSION##*.} + 1))-SNAPSHOT\"\n\necho\
        \ \"version=${VERSION}\" >> $GITHUB_OUTPUT\necho \"next-version=${NEXT_VERSION}\"\
        \ >> $GITHUB_OUTPUT\necho \"release-branch=${VERSION%.*}.x\" >> $GITHUB_OUTPUT"
name: Release CI
on:
  repository_dispatch:
    types: trigger-ga___ci-release.yaml
permissions: {}
