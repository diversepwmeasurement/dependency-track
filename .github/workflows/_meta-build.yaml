jobs:
  build-container:
    needs:
    - build-java
    permissions:
      security-events: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Repository
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
    - continue-on-error: true
      name: Download Artifacts
      uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d
      with:
        name: assembled-wars
        path: target
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
    - continue-on-error: true
      id: buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb
      with:
        install: true
    - continue-on-error: true
      if: ${{ inputs.publish-container }}
      name: Login to Docker.io
      uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
      with:
        password: ${{ secrets.registry-0-psw }}
        registry: docker.io
        username: ${{ secrets.registry-0-usr }}
    - continue-on-error: true
      id: tags
      name: Set Container Tags
      run: "TAGS=\"docker.io/dependencytrack/${{ matrix.distribution }}:${{ inputs.app-version\
        \ }}\"\nif [[ \"${{ inputs.app-version }}\" != \"snapshot\" ]]; then\n  TAGS=\"\
        ${TAGS},docker.io/dependencytrack/${{ matrix.distribution }}:latest\"\nfi\n\
        echo \"tags=${TAGS}\" >> $GITHUB_OUTPUT"
    - continue-on-error: true
      name: Build multi-arch Container Image
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
      with:
        build-args: 'APP_VERSION=${{ inputs.app-version }}

          COMMIT_SHA=${{ github.sha }}

          WAR_FILENAME=dependency-track-${{ matrix.distribution }}.jar'
        context: .
        file: src/main/docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: false
        tags: ${{ steps.tags.outputs.tags }}
    - continue-on-error: true
      if: ${{ inputs.publish-container }}
      name: Run Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55
      with:
        format: sarif
        ignore-unfixed: true
        image-ref: docker.io/dependencytrack/${{ matrix.distribution }}:${{ inputs.app-version
          }}
        output: trivy-results.sarif
        vuln-type: os
    - continue-on-error: true
      if: ${{ inputs.publish-container }}
      name: Upload Trivy Scan Results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@c7f9125735019aa87cfc361530512d50ea439c71
      with:
        sarif_file: trivy-results.sarif
    strategy:
      fail-fast: false
      matrix:
        distribution:
        - apiserver
        - bundled
  build-java:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Repository
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Setup CycloneDX CLI
      run: 'mkdir -p "$HOME/.local/bin"

        echo "$HOME/.local/bin" >> $GITHUB_PATH

        wget -O "$HOME/.local/bin/cyclonedx" https://github.com/CycloneDX/cyclonedx-cli/releases/download/v0.24.2/cyclonedx-linux-x64

        echo "ef0d3b31d176e02bc594f83e19cfcea053c6bc5b197351f71696e189390f851d $HOME/.local/bin/cyclonedx"
        | sha256sum -c

        chmod +x "$HOME/.local/bin/cyclonedx"

        '
    - continue-on-error: true
      name: Build with Maven
      run: 'mvn clean

        mvn package -Dmaven.test.skip=true -P enhance -P embedded-jetty -Dservices.bom.merge.skip=false
        -Dlogback.configuration.file=src/main/docker/logback.xml

        mvn clean -P clean-exclude-wars

        mvn package -Dmaven.test.skip=true -P enhance -P embedded-jetty -P bundle-ui
        -Dservices.bom.merge.skip=false -Dlogback.configuration.file=src/main/docker/logback.xml

        mvn clean -P clean-exclude-wars

        mvn cyclonedx:makeBom -Dservices.bom.merge.skip=false org.codehaus.mojo:exec-maven-plugin:exec@merge-services-bom'
    - continue-on-error: true
      name: Upload Artifacts
      uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba
      with:
        name: assembled-wars
        path: 'target/*.jar

          target/bom.json'
on:
  repository_dispatch:
    types: trigger-ga____meta-build.yaml
permissions: {}
